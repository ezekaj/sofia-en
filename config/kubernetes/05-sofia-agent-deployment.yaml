# Sofia Voice Agent - Production Ready Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sofia-agent
  namespace: sofia-dental
  labels:
    app: sofia-agent
    component: voice-agent
    version: v1.0.0
spec:
  replicas: 3  # High availability with load distribution
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: sofia-agent
  template:
    metadata:
      labels:
        app: sofia-agent
        component: voice-agent
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sofia-agent
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: wait-for-livekit
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nslookup livekit-service.sofia-dental.svc.cluster.local;
          do echo waiting for livekit; sleep 2; done;
          echo "LiveKit is ready";
      - name: wait-for-calendar
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          until nslookup dental-calendar-service.sofia-dental.svc.cluster.local;
          do echo waiting for calendar; sleep 2; done;
          echo "Calendar service is ready";
      containers:
      - name: sofia-agent
        image: sofia-agent:latest  # Use your registry
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: health
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        # LiveKit Configuration
        - name: LIVEKIT_URL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LIVEKIT_URL
        - name: LIVEKIT_API_KEY
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LIVEKIT_API_KEY
        - name: LIVEKIT_API_SECRET
          valueFrom:
            secretKeyRef:
              name: sofia-secrets
              key: LIVEKIT_API_SECRET
        # External API Keys
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: sofia-secrets
              key: GOOGLE_API_KEY
        # Service URLs
        - name: CALENDAR_URL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: CALENDAR_URL
        - name: CRM_URL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: CRM_URL
        # Application Configuration
        - name: PYTHON_ENV
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: PYTHON_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LOG_LEVEL
        - name: HEALTH_CHECK_PORT
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: HEALTH_CHECK_PORT
        # Circuit Breaker Configuration
        - name: CIRCUIT_BREAKER_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: CIRCUIT_BREAKER_THRESHOLD
        - name: CIRCUIT_BREAKER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: CIRCUIT_BREAKER_TIMEOUT
        - name: MAX_RETRIES
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: MAX_RETRIES
        - name: RETRY_BASE_DELAY
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: RETRY_BASE_DELAY
        # Performance Configuration
        - name: MAX_CONCURRENT_SESSIONS
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: MAX_CONCURRENT_SESSIONS
        - name: SESSION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: SESSION_TIMEOUT
        - name: AUDIO_BUFFER_SIZE
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: AUDIO_BUFFER_SIZE
        - name: AUDIO_SAMPLE_RATE
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: AUDIO_SAMPLE_RATE
        # Monitoring Configuration
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: METRICS_PORT
        - name: METRICS_PATH
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: METRICS_PATH
        - name: ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: ENABLE_TRACING
        - name: JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: JAEGER_ENDPOINT
        # Kubernetes specific
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: logs
          mountPath: /var/log/sofia
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 20  # Allow 5 minutes for startup
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 45
      serviceAccountName: sofia-agent-sa
---
# Sofia Agent Service
apiVersion: v1
kind: Service
metadata:
  name: sofia-agent-service
  namespace: sofia-dental
  labels:
    app: sofia-agent
    component: voice-agent
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  selector:
    app: sofia-agent
  ports:
  - name: health
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
  sessionAffinity: None  # Allow load balancing across all instances
---
# Service Account for Sofia Agent
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sofia-agent-sa
  namespace: sofia-dental
  labels:
    app: sofia-agent
    component: rbac
automountServiceAccountToken: true
---
# Role for Sofia Agent
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sofia-agent-role
  namespace: sofia-dental
  labels:
    app: sofia-agent
    component: rbac
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
# Role Binding for Sofia Agent
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sofia-agent-rolebinding
  namespace: sofia-dental
  labels:
    app: sofia-agent
    component: rbac
subjects:
- kind: ServiceAccount
  name: sofia-agent-sa
  namespace: sofia-dental
roleRef:
  kind: Role
  name: sofia-agent-role
  apiGroup: rbac.authorization.k8s.io
---
# Horizontal Pod Autoscaler for Sofia Agent
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sofia-agent-hpa
  namespace: sofia-dental
  labels:
    app: sofia-agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sofia-agent
  minReplicas: 3
  maxReplicas: 15  # Scale based on voice session load
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 25  # Scale down by 25% at a time
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50  # Scale up by 50% at a time
        periodSeconds: 30
