# Dental Calendar Service - Production Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dental-calendar
  namespace: sofia-dental
  labels:
    app: dental-calendar
    component: backend-service
    version: v1.0.0
spec:
  replicas: 2  # High availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dental-calendar
  template:
    metadata:
      labels:
        app: dental-calendar
        component: backend-service
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3005"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dental-calendar
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: db-migration
        image: dental-calendar:latest
        command: ['npm', 'run', 'migrate']
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: NODE_ENV
        volumeMounts:
        - name: calendar-data
          mountPath: /app/data
      containers:
      - name: dental-calendar
        image: dental-calendar:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3005
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: NODE_ENV
        - name: SOFIA_VOICE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: SOFIA_VOICE_ENABLED
        - name: PORT
          value: "3005"
        - name: DATABASE_PATH
          value: "/app/data/dental_calendar.db"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LOG_LEVEL
        - name: METRICS_PORT
          value: "3006"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: calendar-data
          mountPath: /app/data
        - name: logs
          mountPath: /var/log/calendar
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3005
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3005
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 18
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: calendar-data
        persistentVolumeClaim:
          claimName: calendar-data-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
---
# Dental Calendar Service
apiVersion: v1
kind: Service
metadata:
  name: dental-calendar-service
  namespace: sofia-dental
  labels:
    app: dental-calendar
    component: backend-service
spec:
  selector:
    app: dental-calendar
  ports:
  - name: http
    port: 3005
    targetPort: 3005
    protocol: TCP
  type: ClusterIP
  sessionAffinity: None
---
# Sofia Web Interface Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sofia-web
  namespace: sofia-dental
  labels:
    app: sofia-web
    component: web-interface
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sofia-web
  template:
    metadata:
      labels:
        app: sofia-web
        component: web-interface
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5001"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: wait-for-services
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for backend services...";
          until nslookup dental-calendar-service.sofia-dental.svc.cluster.local && \
                nslookup sofia-agent-service.sofia-dental.svc.cluster.local;
          do echo waiting for services; sleep 3; done;
          echo "All services are ready";
      containers:
      - name: sofia-web
        image: sofia-web:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
          name: http
          protocol: TCP
        env:
        - name: FLASK_ENV
          value: "production"
        - name: CALENDAR_URL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: CALENDAR_URL
        - name: SOFIA_AGENT_URL
          value: "http://sofia-agent-service:8080"
        - name: LIVEKIT_URL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LIVEKIT_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sofia-config
              key: LOG_LEVEL
        volumeMounts:
        - name: logs
          mountPath: /var/log/sofia-web
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 5001
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1000
---
# Sofia Web Service
apiVersion: v1
kind: Service
metadata:
  name: sofia-web-service
  namespace: sofia-dental
  labels:
    app: sofia-web
    component: web-interface
spec:
  selector:
    app: sofia-web
  ports:
  - name: http
    port: 5001
    targetPort: 5001
    protocol: TCP
  type: ClusterIP
