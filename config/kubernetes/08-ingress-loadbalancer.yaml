# NGINX Ingress Controller Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sofia-dental-ingress
  namespace: sofia-dental
  labels:
    app: sofia-dental
    component: ingress
  annotations:
    # NGINX Configuration
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # WebSocket Support for LiveKit
    nginx.ingress.kubernetes.io/websocket-services: "livekit-service"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # CORS Configuration for Browser Compatibility
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "50"
    nginx.ingress.kubernetes.io/rate-limit-rate: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security Headers
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Client Body Size for File Uploads
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - sofia-dental.com  # Replace with your domain
    - api.sofia-dental.com
    - voice.sofia-dental.com
    secretName: sofia-dental-tls
  rules:
  # Main Domain - Sofia Web Interface
  - host: sofia-dental.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sofia-web-service
            port:
              number: 5001
      # Health Check Endpoint
      - path: /health
        pathType: Exact
        backend:
          service:
            name: sofia-web-service
            port:
              number: 5001
      # Static Assets
      - path: /static
        pathType: Prefix
        backend:
          service:
            name: sofia-web-service
            port:
              number: 5001
  
  # API Subdomain - Backend Services
  - host: api.sofia-dental.com
    http:
      paths:
      # Calendar API
      - path: /calendar
        pathType: Prefix
        backend:
          service:
            name: dental-calendar-service
            port:
              number: 3005
      # CRM API
      - path: /crm
        pathType: Prefix
        backend:
          service:
            name: crm-service
            port:
              number: 5000
      # Sofia Agent API
      - path: /agent
        pathType: Prefix
        backend:
          service:
            name: sofia-agent-service
            port:
              number: 8080
      # Monitoring APIs
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  
  # Voice Subdomain - LiveKit WebSocket
  - host: voice.sofia-dental.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: livekit-service
            port:
              number: 7880
      # WebSocket endpoint for browser clients
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: livekit-service
            port:
              number: 7880
---
# LoadBalancer Service for Direct Access to LiveKit
# This is crucial for browser WebRTC connections
apiVersion: v1
kind: Service
metadata:
  name: sofia-dental-loadbalancer
  namespace: sofia-dental
  labels:
    app: sofia-dental
    component: external-access
  annotations:
    # AWS LoadBalancer Configuration
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    
    # GCP LoadBalancer Configuration (Alternative)
    # cloud.google.com/load-balancer-type: "External"
    # cloud.google.com/backend-config: '{"default": "sofia-backend-config"}'
    
    # Azure LoadBalancer Configuration (Alternative)
    # service.beta.kubernetes.io/azure-load-balancer-resource-group: "sofia-rg"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local  # Preserve source IP for better WebRTC
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours for long voice sessions
  ports:
  # HTTP/HTTPS for web interface
  - name: http
    port: 80
    targetPort: 5001
    protocol: TCP
  - name: https
    port: 443
    targetPort: 5001
    protocol: TCP
  
  # LiveKit WebSocket and RTC ports
  - name: livekit-ws
    port: 7880
    targetPort: 7880
    protocol: TCP
  - name: livekit-rtc
    port: 7881
    targetPort: 7881
    protocol: TCP
  - name: livekit-udp
    port: 7882
    targetPort: 7882
    protocol: UDP
  
  # Additional RTC port range for WebRTC
  - name: rtc-50000
    port: 50000
    targetPort: 50000
    protocol: UDP
  - name: rtc-50001
    port: 50001
    targetPort: 50001
    protocol: UDP
  - name: rtc-50002
    port: 50002
    targetPort: 50002
    protocol: UDP
  - name: rtc-50003
    port: 50003
    targetPort: 50003
    protocol: UDP
  - name: rtc-50004
    port: 50004
    targetPort: 50004
    protocol: UDP
  
  selector:
    app: sofia-web  # Primary selector for web interface
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Allow all traffic - restrict in production
---
# Network Policy for External Access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sofia-external-access
  namespace: sofia-dental
  labels:
    app: sofia-dental
    component: security
spec:
  podSelector:
    matchLabels:
      app: sofia-web
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 5001
    - protocol: TCP
      port: 8080  # Health checks
---
# Service Monitor for Prometheus to scrape ingress metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: nginx-ingress-monitor
  namespace: sofia-dental
  labels:
    app: nginx-ingress
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
  endpoints:
  - port: prometheus
    interval: 30s
---
# Certificate Issuer for Let's Encrypt SSL
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@sofia-dental.com  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Browser Compatibility Service for Testing
apiVersion: v1
kind: Service
metadata:
  name: sofia-browser-test
  namespace: sofia-dental
  labels:
    app: sofia-dental
    component: testing
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  selector:
    app: sofia-web
  ports:
  - name: web
    port: 80
    targetPort: 5001
    protocol: TCP
  - name: livekit
    port: 7880
    targetPort: 7880
    protocol: TCP
  externalTrafficPolicy: Local
  sessionAffinity: ClientIP
---
# Ingress for Monitoring Stack
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sofia-monitoring-ingress
  namespace: sofia-dental
  labels:
    app: monitoring
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Sofia Monitoring - Authentication Required'
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - monitoring.sofia-dental.com
    secretName: monitoring-tls
  rules:
  - host: monitoring.sofia-dental.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
      - path: /alerts
        pathType: Prefix
        backend:
          service:
            name: alertmanager-service
            port:
              number: 9093
---
# Basic Auth Secret for Monitoring
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: sofia-dental
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkSDZ1bFFWWlckYTNWNFJHdWVmQS96Y3lQQjFrVEEw  # admin:monitoring123
